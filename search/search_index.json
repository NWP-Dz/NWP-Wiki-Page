{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ONM-NWP Documentation","text":"<p>Welcome to the ONM-NWP documentation </p>"},{"location":"#useful-links","title":"Useful links","text":"<ul> <li>Accord</li> <li>Accord wiki</li> <li>IFS documentation</li> <li>Surfex documentation</li> <li>Data assimilation training</li> </ul>"},{"location":"#github","title":"Github","text":"<ul> <li>NWP-Dz</li> <li>ACCORD-NWP/IAL (contributing) </li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>To update a page:</p> <ul> <li>Click the \"Edit on Github\" button at the top right of the page</li> <li>Edit the markdown file on github.com</li> <li>commit (this creates a new branch in your fork) and start a pull request</li> </ul> <p>When adding new pages also add them to <code>docs/pages.jl</code> so they appear in the navigation bar.</p> <p>To add a reference: </p> <ul> <li>Update <code>docs/references.bib</code> using ``` as the citation key.    <li>Cite paper in markdown using <code>[&lt;Lastname&gt;&lt;Year&gt;](@cite)</code></li>"},{"location":"about/","title":"About Us","text":"<p>This Wiki Page contains all the manuels of the NWP departement of the National Office of Meteorology. The main point of Creating it is to help the newcomers to adapt quickly to the atmospher of work and help them understand the basics of NWP. All these manuels are created by the Members of the NWP departement so if you have any questions about any topic contact the authors and they will guide you to achieve and realise the same tasks mentionned in manuels.</p>"},{"location":"contact/","title":"Contact","text":""},{"location":"contact/#meet-the-team","title":"Meet the Team","text":""},{"location":"contact/#walid-chikhi-physicsrestorcycles","title":"Walid Chikhi (Physics/Restor/Cycles)","text":"<p>GitHub: walidchikhi E-mail: waliidchikhi@gmail.com</p>"},{"location":"contact/#ayoub-mehbali-physicsseasonalforecastrestorcycles","title":"Ayoub Mehbali (Physics/SeasonalForecast/Restor/Cycles)","text":"<p>GitHub: mhbayoub E-mail: ayoubmehbali@gmail.com</p>"},{"location":"contact/#imad-eddine-helali-physics","title":"Imad Eddine Helali (Physics)","text":"<p>GitHub: imadhelali E-mail: imadhelali@gmail.com</p>"},{"location":"contact/#nour-el-islam-kerroumi-surfacerestorcycles","title":"Nour El Islam Kerroumi (Surface/Restor/Cycles)","text":"<p>GitHub: KERROUMI E-mail: kerrouminourelisslam2019@gmail.com</p>"},{"location":"contact/#issam-lagha-dataassimilation","title":"Issam Lagha (DataAssimilation)","text":"<p>GitHub: issamlagha E-mail: lagha.issam7@gmail.com</p>"},{"location":"contact/#amine-khedim-wavewatch-iii","title":"Amine Khedim (WaveWatch III)","text":"<p>GitHub: aminekhedim E-mail: aminekhedim10@gmail.com</p>"},{"location":"contact/#mohand-ait-meziane-dataassimilation","title":"Mohand Ait Meziane (DataAssimilation)","text":"<p>GitHub: aitmezianeMO E-mail: aitmeziane.m.ouali@gmail.com</p>"},{"location":"contact/#nadia-aber-control-verification","title":"Nadia Aber (Control &amp; Verification)","text":"<p>GitHub: Nadiaaber E-mail: nadiaaber468@gmail.com</p>"},{"location":"contact/#chahrazed-bouzerma-dataassimilationrestor","title":"Chahrazed Bouzerma (DataAssimilation/Restor)","text":"<p>GitHub: cbouzerma E-mail: bouzermachahrazed@gmail.com</p>"},{"location":"references/","title":"References","text":"<p><code>@bibliography</code></p>"},{"location":"Control_%26_Verification/HARP/","title":"harp","text":"<p>harp is a set of R packages for manipulation, analysis, visualization and verification of data from regular grids. The most up to date  information and tutorials can be found on the website for the 2024 training course</p>"},{"location":"Cycles/cy43/","title":"EPyGrAM","text":""},{"location":"Cycles/cy43/#general","title":"General","text":"<ul> <li>EPyGram wiki</li> <li>EPyGram doc</li> </ul>"},{"location":"Cycles/cy46/","title":"EPyGrAM","text":""},{"location":"Cycles/cy46/#general","title":"General","text":"<ul> <li>EPyGram wiki</li> <li>EPyGram doc</li> </ul>"},{"location":"DataAssimilation/Screening/","title":"Screening","text":""},{"location":"DataAssimilation/Screening/#introduction","title":"Introduction","text":"<p>Screening (configuration 002 of ARPEGE/IFS model) carries out quality control of observations. </p> <p>A useful presentation (Martin Ridal) from the \"Hirlam-B Training Week on HARMONIE system\" training course is available here. Most of the information on this page is based on his presentation.</p>"},{"location":"DataAssimilation/Surface/CANARI/","title":"Surface Data Assimilation Scheme: Canari","text":""},{"location":"DataAssimilation/Surface/CANARI/#introduction","title":"Introduction","text":"<p>(by Alena.Trojakova)</p> <p>CANARI stands for Code for the Analysis Necessary for ARPEGE for its Rejects and its Initialization. It is software (part of IFS/ARPEGE source code) to produce an ARPEGE/ALADIN analysis based on optimum interpolation method. The number of ARPEGE/ALADIN configuration is 701. CANARI has the two main components the quality control and an analysis. According to the type of observations the analysis can be: * 3D multivariate for U, V, T, Ps * 3D univariate for RH * 2D univariate for 2m/10m fields * soil parameters analysis is based on 2m increments</p> <p>CANARI can handle following 10 types of observations: * SYNOP: Ps, T2m, RH2m, 10m Wind, RR, Snow depth, SST * AIREP: P ( or Z), Wind, T * SATOB: P, Wind, T - from geostationary satellite imagery * DRIBU: Ps, T2m, 10m Wind, SST * TEMP: P, Wind, T, Q * PILOT: Wind with the corresponding Z, (sometimes 10m Wind) * SATEM: Q, T retrieved from radiances- surface</p>"},{"location":"ForecastModel/Atmospheric/ALADIN/","title":"Parameter list and GRIB definitions","text":""},{"location":"ForecastModel/Atmospheric/ALADIN/#harmonie-system-output","title":"HARMONIE system output","text":"<p>The HARMONIE system writes its primary output, in FA format, to the upper air history files <code>ICMSHHARM+llll</code> and the SURFEX history files <code>ICMSHHARM+llll.sfx</code>, where <code>HARM</code> is the four-character experiment identifier set in the configuration file <code>config_exp.h</code>, and <code>llll</code> is normally the current timestep in hours. The files are designed to be complete snapshots of respective model state described by the system for a particular time point. In addition more model output including post-processing/diagnostic fields can be written out during the forecast model integration, such as those model diagnostics or pressure level diagnostics, also in FA format, as <code>PFHARMDOMAIN+llll</code>. The FA files can be considered to be internal format files. All of them can be converted to GRIB files during the run for external usage. The name convention is as follows:</p>"},{"location":"ForecastModel/Atmospheric/AROME/","title":"High Resolution Modelling","text":"<p>This page gives some details and advice on settings for running HARMONIE-AROME at sub-kilometre resolutions.  A number of workshops have been held on this topic; more information and presentations may be found on hirlam.org.</p>"},{"location":"ForecastModel/Atmospheric/AROME_Dust/","title":"Near Real Time Aerosols","text":"<p>The model can be configured to use near-real-time aerosols from CAMS. This is done by setting <code>USEAERO=camsnrt</code> in <code>ecf/config_exp.h</code>, which leads to retrieval of boundary files containing aerosol mass mixing ratio fields from CAMS. Other values of <code>USEAERO</code> are related to use and generation of climatological (2D) aerosol. Please see scr/forecast_model_settings.sh for some further details.</p>"},{"location":"ForecastModel/Marine/ww3/","title":"EPyGrAM","text":""},{"location":"ForecastModel/Marine/ww3/#general","title":"General","text":"<ul> <li>EPyGram wiki</li> <li>EPyGram doc</li> </ul>"},{"location":"Overview/Content/","title":"Harmonie Content","text":""},{"location":"Overview/Content/#overview","title":"Overview","text":"<p>Harmonie is HIRLAM's adaptation of the LAM version of the IFS/ARPEGE project. The common code shared with the ALADIN program, Meteo France and ECMWF only contains the source code. Harmonie adds the build environment, scripts, support for a scheduler, and a number of diagnostics tools for file conversion and postprocessing. In summary a git clone of harmonie from github contains the following main directories.</p>"},{"location":"Overview/FileFormats/","title":"File formats in HARMONIE","text":""},{"location":"Overview/FileFormats/#introduction","title":"Introduction","text":"<p>The HARMONIE system reads and writes a number of different formats. </p>"},{"location":"Overview/FileFormats/#fa-files","title":"FA files","text":"<p>Default internal format input/output for HARMONIE for gridpoint, spectral and SURFEX data. GRIB is used as a way to pack data, but the grib record cannot be used as such.</p> <ul> <li>The header contains information about model domain, projection, spectral truncation, extension zone, boundary zone, vertical levels. </li> <li>Only one date/time per file.</li> <li>FA routines are found under <code>ifsaux/fa</code></li> <li>List or convert a file with <code>gl</code></li> <li>Other listing tool PINUTS</li> </ul> <p>Read more</p>"},{"location":"Overview/FileFormats/#netcdf","title":"NETCDF","text":"<p>In climate mode all FA files may converted to NETCDF after the forecast run. For the conversion between FA names and NETCDF parameters check <code>util/gl/inc/nc_tab.h</code>.</p> <ul> <li>For the manipulation and listing of NETCDF files we refer to standard NETCDF tools.</li> <li>NETCDF is also used as output data from some SURFEX tools.</li> </ul>"},{"location":"Overview/Source/","title":"Harmonie Source Code","text":""},{"location":"Overview/Source/#introduction","title":"Introduction","text":"<p>This wiki page summaries the ARPEGE/IFS source code made available in the HARMONIE system. It is based on documents made available by YESSAD K. (METEO-FRANCE/CNRM/GMAP/ALGO). The relevant document for cycle 40 is available here (or directly here).</p>"},{"location":"Physics/Dust/","title":"EPyGrAM","text":""},{"location":"Physics/Dust/#general","title":"General","text":"<ul> <li>EPyGram wiki</li> <li>EPyGram doc</li> </ul>"},{"location":"Physics/Visib/","title":"EPyGrAM","text":""},{"location":"Physics/Visib/#general","title":"General","text":"<ul> <li>EPyGram wiki</li> <li>EPyGram doc</li> </ul>"},{"location":"Physics/turb/","title":"EPyGrAM","text":""},{"location":"Physics/turb/#general","title":"General","text":"<ul> <li>EPyGram wiki</li> <li>EPyGram doc</li> </ul>"},{"location":"RESTOR/restor/","title":"EPyGrAM","text":""},{"location":"RESTOR/restor/#general","title":"General","text":"<ul> <li>EPyGram wiki</li> <li>EPyGram doc</li> </ul>"},{"location":"Radiation/Ecrad/","title":"EPyGrAM","text":""},{"location":"Radiation/Ecrad/#general","title":"General","text":"<ul> <li>EPyGram wiki</li> <li>EPyGram doc</li> </ul>"},{"location":"Seasonal_Forecast/seasonalforecast/","title":"Postprocessing with FULL-POS","text":""},{"location":"Seasonal_Forecast/seasonalforecast/#introduction","title":"Introduction","text":"<p>FULL-POS is a powerful postprocessing package, which is part of the  common ARPEGE/IFS cycle. FULL-POS is documented by   * Yessad (2011): This documentation describes the software FULL-POS doing post-processing on different kind of vertical levels. In particular, post-processable variables and organigramme are given. Some aspects of horizontal and vertical interpolators (which may be used in some other applications) are also described.  * ykfpos38.pdf: FULL-POS in cycle 38  * El Khatib (2002): Older documentation with a link to an old FULL-POS website.</p> <p>FULL-POS is a special configuration (9xx) of the full model for setup and initialization. In other words it is a 0 hour forecast, with extra namelist settings for variables to (post)process and to write out. When generating initial or boundary files we are calling a special configuration of FULL-POS, e927.</p>"},{"location":"Surface/SurFex/","title":"EPyGrAM","text":""},{"location":"Surface/SurFex/#general","title":"General","text":"<ul> <li>EPyGram wiki</li> <li>EPyGram doc</li> </ul>"},{"location":"Visualization/EPyGrAM/","title":"EPyGrAM","text":""},{"location":"Visualization/EPyGrAM/#general","title":"General","text":"<ul> <li>EPyGram wiki</li> <li>EPyGram doc</li> </ul>"}]}